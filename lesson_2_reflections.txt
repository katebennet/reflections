1. What happens when you initialize a repository? Why do you need to do it?

Don't know.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

Working directory = what you're working on, not saved to the cloud.
Staging area = saved to the cloud, safer in case lose the file, others can look at it.
Repository = checked in, impacting the main code line.

3. How can you use the staging area to make sure you have one commit per logical change?

Look at the commit names, make sure they are distinct and only describe one change in each.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you're experimenting with something that you don't want to touch the main code yet.

5. How do the diagrams help you visualize the branch structure?

See where everything fits together.

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Two branches become one.
Represented in the diagram that way because you always need a Master, so effectively one branch is merging in to Master.

7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging: quicker, usually correct. BUT may merge things incorrectly and you don't see all the changes to the code.
Merges manually: see every change, choose to keep/ discard what you want. BUT slower and could make manual mistakes. 